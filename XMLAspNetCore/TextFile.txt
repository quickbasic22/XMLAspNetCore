  $("#ddSelect").onchange(function () {
            var ddlSelect = $(this);
            var listBox = $("#listBox");
            var url = $(this).data("request-url");

            // Perform AJAX request or navigate to the generated URL
            // Example AJAX request:
            $.ajax({
                url: url,
                method: "POST"
                
                // Additional parameters or data
                success: function (response) {
                    // Handle success
                },
                error: function (error) {
                    // Handle error
                }
            });

        });



.heart {
    width: 100px;
    height: 100px;
    background-color: red;
    position: relative;
    transform: rotate(-45deg);
    animation: heartbeat 2s infinite;
}
@keyframes heartbeat {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.3);
    }
    100% {
        transform: scale(1);
    }
}





function changeXmlPage(select) {
    var url = select.value;
    document.getElementById('xmlPage').action = url;
    document.getElementById('_Layout').submit();

    document.getElementById('myForm').submit();

    // Redirect without leaving a directory in the URL
    window.location.href = '/NewPage';
}



<form id="_Layout" method="get">
                                <label for="xmlPage">Select XML Page:</label>
                                <select id="xmlPage" name="xmlPage" onchange="changeXmlPage(this)">
                                    @foreach (var xmlPage in xmlPages)
                                    {
                                        <option value="@xmlPage.Key">@xmlPage.Value</option>
                                    }
                                </select>
                            </form>
var xmlPages = new List<SelectListItem>
            {
                new SelectListItem() { Text = "Select Page", Value = "Select Page" },
                new SelectListItem() { Text = "Xml Reader Page 1", Value = "XML/XmlReaderPage" },
                new SelectListItem() { Text = "Xml Reader Page 2", Value = "XML/XmlReaderPage4-3" },
                new SelectListItem() { Text = "Xml Reader Page 3", Value = "XML/XmlReaderPage4-4" },
                new SelectListItem() { Text = "Xml Reader Page 4", Value = "XML/XmlReaderPage4-5" },
                new SelectListItem() { Text = "Xml Writer Page 5", Value = "XML/XmlWriterPage4-6" },
                new SelectListItem() { Text = "Xml Writer Page 6", Value = "XML/XmlWriterPage4-7" },
            };
        }

@{
        var xmlPages = new Dictionary<string, string>
            {
                { "Select Page", "Select Page" },
                { "XML/XmlReaderPage", "Xml Reader Page 1" },
                { "XML/XmlReaderPage4-3", "Xml Reader Page 2" },
                { "XML/XmlReaderPage4-4", "Xml Reader Page 3" },
                { "XML/XmlReaderPage4-5", "Xml Reader Page 4" },
                { "XML/XmlWriterPage4-6", "Xml Writer Page 5" },
                { "XML/XmlWriterPage4-7", "Xml Writer Page 6" },
            };
        }




[BindProperty]
        public string SelectedExpression { get; set; }

        public SelectList Expressions { get; } = new SelectList(new[]
        {
            new { Value = "//book/title", Text = "//book/title" },
            new { Value = "//book[@genre='novel']/title", Text = "//book[@genre='novel']/title" },
            new { Value = "//book/author/first-name", Text = "//book/author/first-name" },
            new { Value = "//book[@genre='philosophy']/title", Text = "//book[@genre='philosophy']/title" },
            new { Value = "//book/price", Text = "//book/price" },
            new { Value = "//book[3]/title", Text = "//book[3]/title" }
        }, "Value", "Text");


        @* @Html.ActionLink("OnPostAdd", "OnPostAdd", new { @class="btn btn-Primary"})*@

